* {
  margin: 0;
}
* {
  padding: 0;
}

@font-face {
  font-family: MyFont;
  src: url(CowboyOutlaw.otf);
}

/*There are 5 position properties: static (the default), relative, absolute, fixed, and sticky. Elements are always positioned using top:, right:, bottom:, and/or left:, along with a value. Any CSS unit of measure will work; i.e., em, rem, etc. Positive values push inward and negative values push outward. When you use CSS positioning, you are modifying the normal document flow. Divs, paragraphs, and lists are block elements by default. Images, links, and inputs are in-line elements by default. (a) The relative position is relative to its original position. Relative positioning DOES NOT affect the document flow; i.e., even though we visually moved the element, it still exists in its original location as far as the other elements are concerned. (b) absolute-positioned elements are positioned relative to the nearest parent element. Elements that are absolutely-positioned ARE removed from the document flow. (c) Fixed positioning is always relative to the viewport (browser window). It works similarly to absolute positioned elements except the "parent" element is always the viewport. It moves with the browser window and sits in front of all the other content. Fixed-positioned elements ARE removed from the document flow. (d) Sticky positioning is relative to the containing element. Its document flow behaves like 'relative' until it is stuck, and then behaves like 'fixed'. Z-index controls the stacking order of CSS elements.*/

body {    /*Header and section are children of the body element.*/
  font-family: MyFont;
  font-size: 18px;
  background-image: url('seager.jpg');
  background-repeat:no-repeat;
  background-size: cover;
  background-attachment: fixed;
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
}

header {   
  display: flex;
  flex-direction: row; /*The following two lines are parent-level properties.*/
  justify-content: space-around; /*This provides horizontal alignment to the 3 elements in the header.*/
  align-items: center; /*This centers the 3 elements in the header vertically.*/
  height: 120px;
  font-size: 55px;
  color: black;
  background-color: rgb(113, 143, 173);
  position: fixed; /*Fixed positioning is always relative to the viewport, not the page. */
  top: 0; /*I needed fixed positioning to force the header all the way across my phone screen*/
  left: 0;
  right: 0;
  z-index: 2;
}

@media (max-width: 800px){
  header {
    font-size: 44px;
  }
}

section { /*Aside and main are children of the section element*/
  display: flex; 
  justify-content: flex-start; /*This is a parent-level properties.*/
  position: relative;
  top: 96px; /*This line moved the section element down below the header which was covering the 'March' heading*/  
}

aside {
  display: flex;
  flex-direction: column;
  width: 160px;
  background-color: rgb(113, 143, 173);
  color: black;
  position: fixed;
  top: 0;
  bottom: 0;
  z-index: 1;
}

.pig-in-sidebar{
  position: relative;
  top: 175px;
  left: 90px;
}
.paragraph-in-sidebar{
  position:relative;
  top: 170px;
  left: 10px;
  
}
.table{
  position:relative;
  top: 180px;

}
.ws-ring-in-sidebar {
  position: relative;
  top: 250px;
  left: 18px;
}

main {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  flex: 1;
}

.name-of-month {
  display: flex; /*Allows the next line to work*/
  align-items: flex-end; /*Places at bottom of container*/
  height: 96px;
  font-size: 55px;
}

.two-week-month {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  align-items: center;
  gap: 16px;  
  /*column-gap: 4px;
  row-gap: 4px;*/
  width: 1000px;
  height: 280px;
}

.five-week-month {
  display: flex;
  flex-wrap: wrap;  
  justify-content: center;
  align-items: center;
  gap: 16px;
  /*column-gap: 4px;
  row-gap: 4px;*/
  width: 1000px;
  height: 700px;
}

.six-week-month {
  display: flex;
  flex-wrap: wrap;  
  justify-content: center;
  align-items: center;
  gap: 16px;
  /*column-gap: 4px;
  row-gap: 4px;*/
  width: 1000px;
  height: 800px;
}

/*(1) Default is 'nowrap'. (2) Adding more than 7 squares caused all 8 to squish horizontally. This is prevented with 'wrap*. (3) Apparently borders figure into the pixel count to determine whether the parent is horizontally full. 10 extra pixels were required when 1px borders were applied to all 7 squares (a few more than expected). (4) When I added the 8th square, the top of the new row appeared at the vertical halfway point. (5)'align-content' only works when 'wrap' is turned on and wrapping is occurring; it allows us to align everything along the cross axis. (6) 'Justify-content' allows alignment along the main axis. (7) 'align-items' allows alignment along the cross axis. (8) 'flex-direction'= 'row' by default. (9) 'gaps','row-gaps', or 'column-gaps' can be added. The colunn-gaps figure into the horizontal pixel count and caused the 7th square to move down a row.*/

.placeholder {
  width: 125px;
  height: 125px;
  /*border: 1px solid black;
  background-color: ;*/
}

.mar27, .mar28, .mar29, .mar30, .mar31, .apr1, .apr2, .apr3, .apr4, .apr5, .apr6, .apr7, .apr8, .apr9, .apr10, .apr11, .apr12, .apr13, .apr14, .apr15, .apr16, .apr17, .apr18, .apr19, .apr20, .apr21, .apr22, .apr23, .apr24, .apr25, .apr26, .apr27, .apr28, .apr29, .apr30, .may1, .may2, .may3, .may4, .may5, .may6, .may7, .may8, .may9, .may10, .may11, .may12, .may13, .may14, .may15, .may16, .may17, .may18, .may19, .may20, .may21, .may22, .may23, .may24, .may25, .may26, .may27, .may28, .may29, .may30, .may31, .jun1, .jun2, .jun3, .jun4, .jun5, .jun6, .jun7, .jun8, .jun9, .jun10, .jun11, .jun12, .jun13, .jun14, .jun15, .jun16, .jun17, .jun18, .jun19, .jun20, .jun21, .jun22, .jun23, .jun24, .jun25, .jun26, .jun27, .jun28, .jun29, .jun30, .jul1, .jul2, .jul3, .jul4, .jul5, .jul6, .jul7, .jul8, .jul9, .jul10, .jul11, .jul12, .jul13, .jul14, .jul15, .jul16, .jul17, .jul18, .jul19, .jul20, .jul21, .jul22, .jul23, .jul24, .jul25, .jul26, .jul27, .jul28, .jul29, .jul30, .jul31, .aug1, .aug2, .aug3, .aug4, .aug5, .aug6, .aug7, .aug8, .aug9, .aug10, .aug11, .aug12, .aug13, .aug14, .aug15, .aug16, .aug17, .aug18, .aug19, .aug20, .aug21, .aug22, .aug23, .aug24, .aug25, .aug26, .aug27, .aug28, .aug29, .aug30, .aug31, .sep1, .sep2, .sep3, .sep4, .sep5, .sep6, .sep7, .sep8, .sep9, .sep10, .sep11, .sep12, .sep13, .sep14, .sep15, .sep16, .sep17, .sep18, .sep19, .sep20, .sep21, .sep22, .sep23, .sep24, .sep25, .sep26, .sep27, .sep28 {
  width: 125px;
  height: 125px;
  background-color: lightcyan;
  border: 1px solid black;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.day {
  
}

.date {
  font-size: 32px;
}

.opp {

}

.score {

}

.recap {

}
